[{"C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\index.js":"1","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\App.js":"2","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\store.js":"3","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\utils\\setAuthToken.js":"4","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\auth\\Login.js":"5","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\dashboard\\Dashboard.js":"6","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\dashboard\\TrocaToner.js":"7","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\dashboard\\Suprimentos.js":"8","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\actions\\auth.js":"9","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\layout\\Alert.js":"10","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\dashboard\\Administracao.js":"11","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\routing\\PrivateRoute.js":"12","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\routing\\PrivateRouteAdmin.js":"13","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\dashboard\\Relatorios.js":"14","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\reducers\\index.js":"15","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\actions\\registrartroca.js":"16","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\actions\\suprimentos.js":"17","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\actions\\impressoras.js":"18","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\actions\\alert.js":"19","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\actions\\types.js":"20","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\dashboard\\adm\\Impressoras.js":"21","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\dashboard\\adm\\Usuarios.js":"22","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\dashboard\\adm\\Suprimentos.js":"23","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\actions\\relatorio.js":"24","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\reducers\\auth.js":"25","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\reducers\\suprimentos.js":"26","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\reducers\\alert.js":"27","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\reducers\\usuarios.js":"28","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\reducers\\impressoras.js":"29","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\reducers\\relatorio.js":"30","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\reducers\\registrartroca.js":"31","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\actions\\usuarios.js":"32"},{"size":255,"mtime":1607514881737,"results":"33","hashOfConfig":"34"},{"size":1109,"mtime":1609273265781,"results":"35","hashOfConfig":"34"},{"size":395,"mtime":1607514881784,"results":"36","hashOfConfig":"34"},{"size":444,"mtime":1607514881784,"results":"37","hashOfConfig":"34"},{"size":3374,"mtime":1608353624165,"results":"38","hashOfConfig":"34"},{"size":5081,"mtime":1609268079331,"results":"39","hashOfConfig":"34"},{"size":8939,"mtime":1609154096278,"results":"40","hashOfConfig":"34"},{"size":5989,"mtime":1609239888541,"results":"41","hashOfConfig":"34"},{"size":1446,"mtime":1609154095725,"results":"42","hashOfConfig":"34"},{"size":569,"mtime":1607514881737,"results":"43","hashOfConfig":"34"},{"size":2901,"mtime":1609154095757,"results":"44","hashOfConfig":"34"},{"size":1175,"mtime":1608328579448,"results":"45","hashOfConfig":"34"},{"size":1205,"mtime":1609154096462,"results":"46","hashOfConfig":"34"},{"size":10255,"mtime":1609418189320,"results":"47","hashOfConfig":"34"},{"size":663,"mtime":1608549235879,"results":"48","hashOfConfig":"34"},{"size":1176,"mtime":1609154095752,"results":"49","hashOfConfig":"34"},{"size":3662,"mtime":1609154095754,"results":"50","hashOfConfig":"34"},{"size":3589,"mtime":1609154095751,"results":"51","hashOfConfig":"34"},{"size":505,"mtime":1609154095724,"results":"52","hashOfConfig":"34"},{"size":2241,"mtime":1608840969443,"results":"53","hashOfConfig":"34"},{"size":7674,"mtime":1609239888546,"results":"54","hashOfConfig":"34"},{"size":7800,"mtime":1609239888549,"results":"55","hashOfConfig":"34"},{"size":7499,"mtime":1609239888548,"results":"56","hashOfConfig":"34"},{"size":885,"mtime":1608353914222,"results":"57","hashOfConfig":"34"},{"size":1049,"mtime":1608571115653,"results":"58","hashOfConfig":"34"},{"size":1477,"mtime":1609154096594,"results":"59","hashOfConfig":"34"},{"size":956,"mtime":1607514881768,"results":"60","hashOfConfig":"34"},{"size":1085,"mtime":1608584134370,"results":"61","hashOfConfig":"34"},{"size":1079,"mtime":1608808522386,"results":"62","hashOfConfig":"34"},{"size":687,"mtime":1608328579465,"results":"63","hashOfConfig":"34"},{"size":626,"mtime":1608808522388,"results":"64","hashOfConfig":"34"},{"size":2072,"mtime":1609154095755,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"mpfi87",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"68"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"68"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"68"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"68"},"C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\index.js",[],["149","150"],"C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\App.js",[],"C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\store.js",[],"C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\auth\\Login.js",[],"C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\dashboard\\Dashboard.js",["151","152","153","154","155"],"import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BrowserRouter as Switch } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport PrivateRoute from \"../routing/PrivateRoute\";\r\nimport PrivateRouteAdmin from \"../routing/PrivateRouteAdmin\";\r\nimport Trocatoner from \"./TrocaToner\";\r\nimport Suprimentos from \"./Suprimentos\";\r\nimport Relatorios from \"./Relatorios\";\r\nimport Administracao from \"./Administracao\";\r\nimport { carregarUsuario } from \"../../actions/auth\";\r\nimport { useEffect } from \"react\";\r\nimport { logout } from \"../../actions/auth\";\r\nimport img from \"../imgs/icon-white.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSignOutAlt,\r\n  faBoxes,\r\n  faQrcode,\r\n  faClipboardCheck,\r\n  faWrench,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Dashboard = ({ logout, carregarUsuario, auth: { usuario } }) => {\r\n  useEffect(() => {\r\n    carregarUsuario();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container>\r\n        <div className=\"row container\">\r\n          <nav className=\"menu col-2 mt-5\">\r\n            <div className=\"logo d-flex flex-column align-items-center\">\r\n              <div className=\"mt-4\">\r\n                <img src={img} alt=\"Ícone\" style={{ width: \"60px\" }} />\r\n              </div>\r\n              <h2>Warehouse</h2>\r\n            </div>\r\n            <hr className=\"bg-white\" />\r\n            <ul className=\"menu-items\">\r\n              <li\r\n                className={`menu-item ${\r\n                  window.location.pathname == \"/trocatoner\" ? \"menu-active\" : \"\"\r\n                }`}\r\n                id=\"registrartroca\"\r\n              >\r\n                <Link to=\"/trocatoner\">\r\n                  <FontAwesomeIcon icon={faQrcode} />{\" \"}\r\n                  <span>Registrar Troca</span>\r\n                </Link>\r\n              </li>\r\n              <hr className=\"hr\" />\r\n              <li\r\n                className={`menu-item ${\r\n                  window.location.pathname == \"/suprimentos\"\r\n                    ? \"menu-active\"\r\n                    : \"\"\r\n                }`}\r\n                id=\"suprimentos\"\r\n              >\r\n                <Link to=\"/suprimentos\">\r\n                  <FontAwesomeIcon icon={faBoxes} /> <span>Suprimentos</span>\r\n                </Link>\r\n              </li>\r\n              <hr className=\"hr\" />\r\n              <li\r\n                className={`menu-item ${\r\n                  window.location.pathname == \"/relatorios\" ? \"menu-active\" : \"\"\r\n                }`}\r\n                id=\"relatorios\"\r\n              >\r\n                <Link to=\"/relatorios\">\r\n                  <FontAwesomeIcon icon={faClipboardCheck} />{\" \"}\r\n                  <span>Relatórios</span>\r\n                </Link>\r\n              </li>\r\n              <hr className=\"hr\" />\r\n              {usuario && usuario.administrador ? (\r\n                <span>\r\n                  <li\r\n                    className={`menu-item ${\r\n                      window.location.pathname == \"/administracao\"\r\n                        ? \"menu-active\"\r\n                        : \"\"\r\n                    }`}\r\n                    id=\"relatorios\"\r\n                  >\r\n                    <Link to=\"/administracao\">\r\n                      <FontAwesomeIcon icon={faWrench} />{\" \"}\r\n                      <span>Administração</span>\r\n                    </Link>\r\n                  </li>\r\n                  <hr className=\"hr\" />\r\n                </span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <li className=\"menu-item\" id=\"relatorios\">\r\n                <Link className=\"menu-item\" to=\"/\" onClick={logout}>\r\n                  <FontAwesomeIcon icon={faSignOutAlt} /> <span>Logout</span>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n\r\n          <div className=\"content col-8 mt-5\">\r\n            <Switch>\r\n              <PrivateRoute exact path=\"/trocatoner\" component={Trocatoner} />\r\n              <PrivateRoute exact path=\"/suprimentos\" component={Suprimentos} />\r\n              <PrivateRouteAdmin\r\n                exact\r\n                path=\"/administracao\"\r\n                component={Administracao}\r\n              />\r\n              <PrivateRouteAdmin\r\n                exact\r\n                path=\"/administracaoimpressoras\"\r\n                component={Administracao}\r\n              />\r\n              <PrivateRouteAdmin\r\n                exact\r\n                path=\"/administracaosuprimentos\"\r\n                component={Administracao}\r\n              />\r\n              <PrivateRoute exact path=\"/relatorios\" component={Relatorios} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  carregarUsuario: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { logout, carregarUsuario })(Dashboard);\r\n","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\dashboard\\TrocaToner.js",["156","157","158","159"],"import React, { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { obterSuprimento } from \"../../actions/suprimentos\";\r\nimport { obterImpressorasDisponiveis } from \"../../actions/impressoras\";\r\nimport { registrarTroca } from \"../../actions/registrartroca\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useEffect } from \"react\";\r\nimport Alert from \"../layout/Alert\";\r\n\r\nconst Trocatoner = ({\r\n  obterSuprimento,\r\n  suprimento,\r\n  obterImpressorasDisponiveis,\r\n  todasImpressoras,\r\n  registrarTroca,\r\n}) => {\r\n  if (document.getElementById(\"registrartroca\")) {\r\n    document.getElementById(\"registrartroca\").classList.add = \"menu-active\";\r\n  }\r\n  const [formData, setFormData] = useState({\r\n    patrimonio: \"\",\r\n    codigoToner: \"\",\r\n    corToner: \"\",\r\n    localizacao: \"\",\r\n    modelo: \"\",\r\n    enderecoIp: \"\",\r\n    totalA3: \"\",\r\n    totalA4: \"\",\r\n  });\r\n\r\n  const {\r\n    patrimonio,\r\n    codigoToner,\r\n    corToner,\r\n    localizacao,\r\n    modelo,\r\n    enderecoIp,\r\n    totalA3,\r\n    totalA4,\r\n  } = formData;\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    registrarTroca(\r\n      patrimonio,\r\n      codigoToner,\r\n      corToner,\r\n      localizacao,\r\n      modelo,\r\n      enderecoIp,\r\n      totalA3,\r\n      totalA4\r\n    );\r\n    setFormData({\r\n      ...formData,\r\n      patrimonio: \"\",\r\n      codigoToner: \"\",\r\n      corToner: \"\",\r\n      localizacao: \"\",\r\n      modelo: \"\",\r\n      enderecoIp: \"\",\r\n      totalA3: \"\",\r\n      totalA4: \"\",\r\n    });\r\n  };\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onChangePatrimonio = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  const getSuprimento = async (e) => {\r\n    e.preventDefault();\r\n    obterSuprimento(codigoToner);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (suprimento && suprimento.utilizado === false) {\r\n      setFormData({ ...formData, corToner: suprimento.cor });\r\n    }\r\n  }, [suprimento]);\r\n\r\n  useEffect(() => {\r\n    obterImpressorasDisponiveis();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (todasImpressoras && patrimonio !== 0) {\r\n      todasImpressoras.map((imp) => {\r\n        if (imp.patrimonio === patrimonio) {\r\n          setFormData({\r\n            ...formData,\r\n            enderecoIp: imp.enderecoIp,\r\n            modelo: imp.modelo,\r\n            localizacao: imp.localizacao,\r\n          });\r\n        }\r\n        if (imp.patrimonio === patrimonio && !imp.enderecoIp) {\r\n          setFormData({\r\n            ...formData,\r\n            enderecoIp: \"\",\r\n            modelo: imp.modelo,\r\n            localizacao: imp.localizacao,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }, [patrimonio]);\r\n\r\n  const limparFormulario = () => {\r\n    document.getElementById(\"codigoToner\").disabled = false;\r\n    setFormData({\r\n      ...formData,\r\n      patrimonio: \"\",\r\n      codigoToner: \"\",\r\n      corToner: \"\",\r\n      localizacao: \"\",\r\n      modelo: \"\",\r\n      enderecoIp: \"\",\r\n      totalA3: \"\",\r\n      totalA4: \"\",\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mt-3\">\r\n        <h1>Registrar Troca de Toner:</h1>\r\n        <hr />\r\n        <Alert />\r\n        <div className=\"col-12 d-flex\">\r\n          <div className=\"col-4\">\r\n            <label className=\"label\" for=\"patrimonio\">\r\n              Patrimônio\r\n            </label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"patrimonio\"\r\n              value={patrimonio}\r\n              onChange={(e) => onChangePatrimonio(e)}\r\n            >\r\n              <option value={0}> - Selecione</option>\r\n              {todasImpressoras && todasImpressoras.length > 0 ? (\r\n                todasImpressoras.map((impressora) => {\r\n                  return (\r\n                    <option key={impressora._id} value={impressora.patrimonio}>\r\n                      {impressora.patrimonio}\r\n                    </option>\r\n                  );\r\n                })\r\n              ) : (\r\n                <option value={0}>Não Disponível</option>\r\n              )}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group col-4\">\r\n            <form onSubmit={getSuprimento}>\r\n              <label className=\"label\" for=\"tonerTrocado\">\r\n                Código Toner:\r\n              </label>\r\n              <div className=\"input-group\">\r\n                <input\r\n                  id=\"codigoToner\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"codigoToner\"\r\n                  value={codigoToner}\r\n                  onChange={(e) => onChange(e)}\r\n                  disabled={corToner}\r\n                  required\r\n                />\r\n                <div className=\"input-group-prepend\">\r\n                  <button type=\"submit\" className=\"btn btn-red\">\r\n                    <FontAwesomeIcon icon={faSearch} />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <form onSubmit={onSubmit}>\r\n          <div className=\"col-12 mb-2 d-flex\">\r\n            <div className=\"col-4\">\r\n              <label className=\"label\" for=\"patrimonio\">\r\n                Cor Toner:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"corToner\"\r\n                value={corToner}\r\n                readOnly\r\n              />\r\n            </div>\r\n            <div className=\"form-group col-7\">\r\n              <label className=\"label\" for=\"patrimonio\">\r\n                Localização:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"localizacao\"\r\n                value={localizacao}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-12 d-flex\">\r\n            <div className=\"form-group col-4\">\r\n              <label className=\"label\" for=\"modeloImpressora\">\r\n                Modelo Impressora:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"modeloImpressora\"\r\n                value={modelo}\r\n                readOnly\r\n              />\r\n            </div>\r\n            <div className=\"form-group col-4\">\r\n              <label className=\"label\" for=\"enderecoIp\">\r\n                Endereço IP:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"enderecoIp\"\r\n                value={enderecoIp}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 ml-3\">\r\n            <span className=\"label-2\">Totais de Impressão:</span>\r\n          </div>\r\n          <div className=\"col-12 d-flex\">\r\n            <div className=\"form-group col-4\">\r\n              <label className=\"label\" for=\"a4\">\r\n                A4:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"totalA4\"\r\n                value={totalA4}\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group col-4\">\r\n              <label className=\"label\" for=\"tray1\">\r\n                A3:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"totalA3\"\r\n                value={totalA3}\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-8 d-flex justify-content-center mb-4\">\r\n            <button\r\n              type=\"submit\"\r\n              id=\"registrar\"\r\n              className=\"btn btn-lg btn-red mr-4\"\r\n            >\r\n              Registrar\r\n            </button>\r\n            <button\r\n              id=\"limpar\"\r\n              className=\"btn btn-lg btn-red ml-4\"\r\n              onClick={(e) => {\r\n                limparFormulario();\r\n              }}\r\n            >\r\n              Limpar\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nTrocatoner.propTypes = {\r\n  obterSuprimento: PropTypes.func.isRequired,\r\n  obterImpressorasDisponiveis: PropTypes.func.isRequired,\r\n  registrarTroca: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  suprimento: state.suprimentos.suprimento,\r\n  todasImpressoras: state.impressoras.todasImpressoras,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  obterSuprimento,\r\n  obterImpressorasDisponiveis,\r\n  registrarTroca,\r\n})(Trocatoner);\r\n","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\dashboard\\Suprimentos.js",["160"],"import React, { Fragment, useState } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  inserirSuprimento,\r\n  obterTodosSuprimentos,\r\n} from \"../../actions/suprimentos\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useEffect } from \"react\";\r\nimport Alert from \"../layout/Alert\";\r\nimport { setAlert } from \"../../actions/alert\";\r\n\r\nconst Suprimentos = ({\r\n  setAlert,\r\n  inserirSuprimento,\r\n  obterTodosSuprimentos,\r\n  todosSuprimentos,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    codigo: \"\",\r\n    modelo: \"C911\",\r\n    disponivel: \"true\",\r\n    cor: \"Preto\",\r\n    atualizarSuprimento: false,\r\n  });\r\n\r\n  let i = 1;\r\n\r\n  const { codigo, modelo, disponivel, cor, atualizarSuprimento } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!codigo) {\r\n      setAlert(\"Informe o código do suprimento!\", \"danger\");\r\n    } else {\r\n      inserirSuprimento(codigo, modelo, disponivel, cor, atualizarSuprimento);\r\n    }\r\n\r\n    setFormData({ ...formData, codigo: \" \" });\r\n  };\r\n\r\n  const limparFormulario = (e) => {\r\n    e.preventDefault();\r\n    setFormData({\r\n      ...formData,\r\n      codigo: \"\",\r\n      modelo: \"\",\r\n      cor: \"\",\r\n      disponivel: \"true\",\r\n      atualizarSuprimento: false,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    obterTodosSuprimentos();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mt-3\">\r\n        <h1>Suprimentos</h1>\r\n        <hr />\r\n        <h4>Registro de Novos Suprimentos:</h4>\r\n        <Alert />\r\n        <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n          <div className=\"col-12 d-flex\">\r\n            <div className=\"form-group col-4\">\r\n              <label className=\"label\">Disponível</label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"disponivel\"\r\n                value={disponivel}\r\n                onChange={(e) => onChange(e)}\r\n              >\r\n                <option value=\"true\">Sim</option>\r\n                <option value=\"false\">Não</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group col-4\">\r\n              <label className=\"label\">Código Toner:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"codigo\"\r\n                value={codigo}\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 mb-2 d-flex\">\r\n            <div className=\"col-4\">\r\n              <label className=\"label\">Modelo</label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"modelo\"\r\n                value={modelo}\r\n                onChange={(e) => onChange(e)}\r\n              >\r\n                <option value=\"C911\">C911</option>\r\n                <option value=\"outro\">Outro</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group col-7\">\r\n              <label className=\"label\">Cor:</label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"cor\"\r\n                value={cor}\r\n                onChange={(e) => onChange(e)}\r\n              >\r\n                <option value=\"Preto\">Preto</option>\r\n                <option value=\"Amarelo\">Amarelo</option>\r\n                <option value=\"Magenta\">Magenta</option>\r\n                <option value=\"Ciano\">Ciano</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-8 d-flex justify-content-center mb-4\">\r\n            <button\r\n              type=\"submit\"\r\n              id=\"registrar\"\r\n              className=\"btn btn-lg btn-red mr-4\"\r\n            >\r\n              Inserir\r\n            </button>\r\n            <button\r\n              id=\"limpar\"\r\n              className=\"btn btn-lg btn-red ml-4\"\r\n              onClick={(e) => {\r\n                limparFormulario(e);\r\n              }}\r\n            >\r\n              Limpar\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <hr />\r\n      </div>\r\n      <div className=\"mt-1 col-12\">\r\n        <h4>Suprimentos Disponíveis:</h4>\r\n        {todosSuprimentos && todosSuprimentos.length > 0 ? (\r\n          <table className=\"table table-striped table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Código </th>\r\n                <th scope=\"col\">Modelo </th>\r\n                <th scope=\"col\">Cor </th>\r\n                <th scope=\"col\">Data de Inserção</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {todosSuprimentos.map((sup) => {\r\n                return (\r\n                  <tr key={sup._id}>\r\n                    <td>{i++}</td>\r\n                    <td className=\"\">{sup.codigo}</td>\r\n                    <td>{sup.modelo}</td>\r\n                    <td>{sup.cor}</td>\r\n                    <td>\r\n                      <Moment format=\"DD/MM/YYYY\">{sup.data}</Moment>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <span className=\"ml-3 bg-danger text-light pr-2\">\r\n            * Sem suprimentos disponíveis para utilização\r\n          </span>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nSuprimentos.propTypes = {\r\n  inserirSuprimento: PropTypes.func.isRequired,\r\n  sucessoSuprimento: PropTypes.bool,\r\n  obterTodosSuprimentos: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  sucessoSuprimento: state.suprimentos.sucessoSuprimento,\r\n  todosSuprimentos: state.suprimentos.todosSuprimentos,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  setAlert,\r\n  inserirSuprimento,\r\n  obterTodosSuprimentos,\r\n})(Suprimentos);\r\n","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\actions\\auth.js",["161","162"],"import axios from \"axios\";\r\nimport {\r\n  SUCESSO_REGISTRO_USUARIO,\r\n  FALHA_REGISTRO_USUARIO,\r\n  USUARIO_LOGADO,\r\n  ERRO_AUTENTICACAO,\r\n  SUCESSO_LOGIN,\r\n  FALHA_LOGIN,\r\n  LOGOUT,\r\n} from \"./types\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\nexport const carregarUsuario = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get(\"/api/auth\");\r\n    dispatch({\r\n      type: USUARIO_LOGADO,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ERRO_AUTENTICACAO,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (matricula, senha) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ matricula, senha });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n\r\n    dispatch({\r\n      type: SUCESSO_LOGIN,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(carregarUsuario());\r\n  } catch (err) {\r\n    const erros = err.response.data.errors;\r\n\r\n    if (erros) {\r\n      erros.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    } else {\r\n      dispatch(setAlert(\"Usuário ou senha incorretos\", \"danger\"));\r\n    }\r\n\r\n    dispatch({\r\n      type: FALHA_LOGIN,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\dashboard\\Administracao.js",["163","164","165","166","167","168"],"import React, { Fragment } from \"react\";\r\nimport Usuarios from \"./adm/Usuarios\";\r\nimport Impressoras from \"./adm/Impressoras\";\r\nimport Suprimentos from \"./adm/Suprimentos\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BrowserRouter as Switch } from \"react-router-dom\";\r\nimport PrivateRoute from \"../routing/PrivateRoute\";\r\n\r\nconst Administracao = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <ul class=\"nav nav-tabs mt-2\" id=\"myTab\" role=\"tablist\">\r\n        <li class=\"nav-item\">\r\n          <Link\r\n            class={`nav-link text-dark ${\r\n              window.location.pathname == \"/administracao\" ? \"active\" : \"\"\r\n            }`}\r\n            id=\"usuarios-tab\"\r\n            data-toggle=\"tab\"\r\n            to=\"/administracao\"\r\n            role=\"tab\"\r\n            aria-controls=\"usuarios\"\r\n            aria-selected={\r\n              window.location.pathname == \"/administracao\" ? \"true\" : \"false\"\r\n            }\r\n          >\r\n            Usuários\r\n          </Link>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <Link\r\n            class={`nav-link text-dark ${\r\n              window.location.pathname == \"/administracaoimpressoras\"\r\n                ? \"active\"\r\n                : \"\"\r\n            }`}\r\n            id=\"impressoras-tab\"\r\n            data-toggle=\"tab\"\r\n            to=\"/administracaoimpressoras\"\r\n            role=\"tab\"\r\n            aria-controls=\"impressoras\"\r\n            aria-selected={\r\n              window.location.pathname == \"/administracaoimpressoras\"\r\n                ? \"true\"\r\n                : \"false\"\r\n            }\r\n          >\r\n            Impressoras\r\n          </Link>\r\n        </li>\r\n        <li class=\"nav- \">\r\n          <Link\r\n            class={`nav-link text-dark ${\r\n              window.location.pathname == \"/administracaosuprimentos\"\r\n                ? \"active\"\r\n                : \"\"\r\n            }`}\r\n            id=\"suprimentos-tab\"\r\n            data-toggle=\"tab\"\r\n            to=\"/administracaosuprimentos\"\r\n            role=\"tab\"\r\n            aria-controls=\"suprimentos\"\r\n            aria-selected={\r\n              window.location.pathname == \"/administracaosuprimentos\"\r\n                ? \"true\"\r\n                : \"false\"\r\n            }\r\n          >\r\n            Suprimentos\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n      <div class=\"tab-content\" id=\"myTabContent\">\r\n        <div>\r\n          <Switch>\r\n            <PrivateRoute exact path=\"/administracao\" component={Usuarios} />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/administracaoimpressoras\"\r\n              component={Impressoras}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/administracaosuprimentos\"\r\n              component={Suprimentos}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAdministracao.propTypes = {};\r\n\r\nexport default Administracao;\r\n","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\routing\\PrivateRouteAdmin.js",[],"C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\dashboard\\Relatorios.js",["169","170","171","172","173","174"],"C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\reducers\\index.js",[],"C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\actions\\registrartroca.js",[],"C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\actions\\suprimentos.js",["175","176"],"import axios from \"axios\";\r\nimport {\r\n  SUCESSO_INSERIR_SUPRIMENTO,\r\n  FALHA_INSERIR_SUPRIMENTO,\r\n  FALHA_OBTER_SUPRIMENTO,\r\n  FALHA_OBTER_TODOS_SUPRIMENTOS,\r\n  OBTER_TODOS_SUPRIMENTOS,\r\n  OBTER_TODOS_SUPRIMENTOS_BANCO,\r\n  USUARIO_LOGADO,\r\n  OBTER_SUPRIMENTO,\r\n  SUCESSO_ATUALIZAR_SUPRIMENTO,\r\n} from \"./types\";\r\n\r\nimport { setAlert } from \"./alert\";\r\n\r\nexport const inserirSuprimento = (\r\n  codigo,\r\n  modelo,\r\n  disponivel,\r\n  cor,\r\n  atualizarSuprimento\r\n) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ codigo, modelo, disponivel, cor });\r\n\r\n  try {\r\n    if (atualizarSuprimento == true) {\r\n      const res = await axios.put(\"/api/suprimento\", body, config);\r\n      dispatch({\r\n        type: SUCESSO_ATUALIZAR_SUPRIMENTO,\r\n        payload: res.data,\r\n      });\r\n      dispatch(setAlert(\"Suprimento atualizado com sucesso!\", \"success\"));\r\n\r\n      const resTodosSuprimentos = await axios.get(\"api/suprimento\");\r\n      dispatch({\r\n        type: OBTER_TODOS_SUPRIMENTOS_BANCO,\r\n        payload: resTodosSuprimentos.data,\r\n      });\r\n    } else {\r\n      const res = await axios.post(\"/api/suprimento\", body, config);\r\n\r\n      dispatch({\r\n        type: SUCESSO_INSERIR_SUPRIMENTO,\r\n      });\r\n      dispatch(setAlert(\"Suprimento inserido com sucesso!\", \"success\"));\r\n\r\n      const resTodosSuprimentos = await axios.get(\"/api/suprimento/disponivel\");\r\n      dispatch({\r\n        type: OBTER_TODOS_SUPRIMENTOS,\r\n        payload: resTodosSuprimentos.data,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    const erros = err.response.data.errors;\r\n    if (erros) {\r\n      erros.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    } else {\r\n      dispatch(setAlert(err.response.data, \"danger\"));\r\n    }\r\n\r\n    dispatch({\r\n      type: FALHA_INSERIR_SUPRIMENTO,\r\n    });\r\n  }\r\n};\r\n\r\nexport const obterTodosSuprimentos = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/suprimento/disponivel\");\r\n    dispatch({ type: USUARIO_LOGADO });\r\n    dispatch({\r\n      type: OBTER_TODOS_SUPRIMENTOS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    const erros = err.response.data.errors;\r\n    if (erros) {\r\n      erros.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: FALHA_OBTER_TODOS_SUPRIMENTOS,\r\n    });\r\n  }\r\n};\r\n\r\nexport const obterSuprimento = (codigo) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ codigo });\r\n  try {\r\n    const res = await axios.post(\r\n      \"/api/suprimento/obtersuprimento\",\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: OBTER_SUPRIMENTO,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    const erros = err.response.data.errors;\r\n    if (erros) {\r\n      erros.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n      dispatch({\r\n        type: FALHA_OBTER_SUPRIMENTO,\r\n      });\r\n    } else {\r\n      dispatch(setAlert(err.response.data.msg, \"danger\"));\r\n    }\r\n  }\r\n};\r\n\r\nexport const obterTodosSuprimentosBanco = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"api/suprimento\");\r\n    dispatch({\r\n      type: OBTER_TODOS_SUPRIMENTOS_BANCO,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    const erros = err.response.data.errors;\r\n    if (erros) {\r\n      erros.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n      dispatch({\r\n        type: FALHA_OBTER_SUPRIMENTO,\r\n      });\r\n    } else {\r\n      dispatch(setAlert(err.response.data.msg, \"danger\"));\r\n    }\r\n  }\r\n};\r\n","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\actions\\impressoras.js",["177","178"],"import axios from \"axios\";\r\nimport {\r\n  SUCESSO_OBTER_IMPRESSORA,\r\n  FALHA_OBTER_IMPRESSORA,\r\n  USUARIO_LOGADO,\r\n  SUCESSO_OBTER_TODAS_IMPRESSORAS,\r\n  FALHA_OBTER_TODAS_IMPRESSORAS,\r\n  SUCESSO_INSERIR_IMPRESSORA,\r\n  SUCESSO_ATUALIZAR_IMPRESSORA,\r\n  FALHA_INSERIR_IMPRESSORA,\r\n} from \"./types\";\r\n\r\nimport { setAlert } from \"./alert\";\r\n\r\nexport const obterImpressora = (patrimonio) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ patrimonio });\r\n  try {\r\n    const res = await axios.post(\r\n      \"/api/impressora/obterimpressora\",\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: SUCESSO_OBTER_IMPRESSORA,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    const erros = err.response.data.errors;\r\n    if (erros) {\r\n      erros.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n      dispatch({\r\n        type: FALHA_OBTER_IMPRESSORA,\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const obterImpressorasDisponiveis = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/impressora/disponivel\");\r\n    dispatch({\r\n      type: SUCESSO_OBTER_TODAS_IMPRESSORAS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    const erros = err.response.data.errors;\r\n    if (erros) {\r\n      erros.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: FALHA_OBTER_TODAS_IMPRESSORAS,\r\n    });\r\n  }\r\n};\r\n\r\nexport const inserirImpressora = (\r\n  patrimonio,\r\n  modelo,\r\n  localizacao,\r\n  enderecoIp,\r\n  disponivel,\r\n  atualizarImpressora\r\n) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    patrimonio,\r\n    modelo,\r\n    localizacao,\r\n    enderecoIp,\r\n    disponivel,\r\n  });\r\n\r\n  try {\r\n    if (atualizarImpressora == true) {\r\n      const res = await axios.put(\"api/impressora\", body, config);\r\n      dispatch({\r\n        type: SUCESSO_ATUALIZAR_IMPRESSORA,\r\n        payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Impressora atualizada com sucesso!\", \"success\"));\r\n\r\n      const resTodasImpressoras = await axios.get(\"api/impressora\");\r\n      dispatch({\r\n        type: SUCESSO_OBTER_TODAS_IMPRESSORAS,\r\n        payload: resTodasImpressoras.data,\r\n      });\r\n    } else {\r\n      const res = await axios.post(\"api/impressora\", body, config);\r\n      dispatch({\r\n        type: SUCESSO_INSERIR_IMPRESSORA,\r\n        payload: res.data,\r\n      });\r\n      dispatch(setAlert(\"Impressora inserida com sucesso!\", \"success\"));\r\n\r\n      const resTodasImpressoras = await axios.get(\"api/impressora\");\r\n      dispatch({\r\n        type: SUCESSO_OBTER_TODAS_IMPRESSORAS,\r\n        payload: resTodasImpressoras.data,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    const erros = err.response.data.errors;\r\n    if (erros) {\r\n      erros.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    } else {\r\n      //dispatch(setAlert(err.response.data, \"danger\"));\r\n    }\r\n\r\n    dispatch({\r\n      type: FALHA_INSERIR_IMPRESSORA,\r\n    });\r\n  }\r\n};\r\n\r\nexport const obterTodasImpressoras = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"api/impressora\");\r\n    dispatch({\r\n      type: SUCESSO_OBTER_TODAS_IMPRESSORAS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    const erros = err.response.data.errors;\r\n    if (erros) {\r\n      erros.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: FALHA_OBTER_TODAS_IMPRESSORAS,\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\actions\\alert.js",[],"C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\actions\\types.js",[],"C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\dashboard\\adm\\Impressoras.js",["179","180"],"import React, { Fragment, useState } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport Alert from \"../../layout/Alert\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  inserirImpressora,\r\n  obterTodasImpressoras,\r\n} from \"../../../actions/impressoras\";\r\nimport { setAlert } from \"../../../actions/alert\";\r\n\r\nconst Impressoras = ({\r\n  setAlert,\r\n  inserirImpressora,\r\n  obterTodasImpressoras,\r\n  impressoras: {\r\n    impressora,\r\n    sucessoImpressora,\r\n    todasImpressoras,\r\n    sucessoTodasImpressoras,\r\n  },\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    patrimonio: \"\",\r\n    modelo: \"\",\r\n    localizacao: \"\",\r\n    enderecoIp: \"\",\r\n    disponivel: \"true\",\r\n    atualizarImpressora: false,\r\n  });\r\n  let i = 1;\r\n\r\n  const {\r\n    patrimonio,\r\n    modelo,\r\n    localizacao,\r\n    enderecoIp,\r\n    disponivel,\r\n    atualizarImpressora,\r\n  } = formData;\r\n\r\n  useEffect(() => {\r\n    obterTodasImpressoras();\r\n  }, []);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    inserirImpressora(\r\n      patrimonio,\r\n      modelo,\r\n      localizacao,\r\n      enderecoIp,\r\n      disponivel,\r\n      atualizarImpressora\r\n    );\r\n    setFormData({\r\n      ...formData,\r\n      patrimonio: \"\",\r\n      modelo: \"\",\r\n      localizacao: \"\",\r\n      enderecoIp: \"\",\r\n      disponivel: \"true\",\r\n      atualizarImpressora: false,\r\n    });\r\n    document.getElementById(\"patrimonio\").disabled = false;\r\n  };\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const editarImpressora = (impressora) => {\r\n    document.getElementById(\"patrimonio\").disabled = true;\r\n    document.getElementById(\"registrar\").innerText = \"Atualizar\";\r\n    setFormData({\r\n      ...formData,\r\n      patrimonio: impressora.patrimonio,\r\n      modelo: impressora.modelo,\r\n      localizacao: impressora.localizacao,\r\n      enderecoIp: impressora.enderecoIp,\r\n      disponivel: impressora.disponivel,\r\n      atualizarImpressora: true,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  const limparFormulario = (e) => {\r\n    e.preventDefault();\r\n    document.getElementById(\"patrimonio\").disabled = false;\r\n    document.getElementById(\"registrar\").innerText = \"Inserir\";\r\n    setFormData({\r\n      ...formData,\r\n      patrimonio: \"\",\r\n      modelo: \"\",\r\n      localizacao: \"\",\r\n      enderecoIp: \"\",\r\n      disponivel: \"true\",\r\n      atualizarUsuario: false,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mt-2\">\r\n        <h2>Cadastrar Impressoras:</h2>\r\n        <Alert />\r\n      </div>\r\n      <form className=\"form mt-2\" onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"col-12 d-flex\">\r\n          <div className=\"form-group col-4\">\r\n            <label className=\"label\">Disponível:</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"disponivel\"\r\n              value={disponivel}\r\n              onChange={(e) => onChange(e)}\r\n            >\r\n              <option value=\"true\">Sim</option>\r\n              <option value=\"false\">Não</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group col-4\">\r\n            <label className=\"label\">Patrimônio:</label>\r\n            <input\r\n              id=\"patrimonio\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"patrimonio\"\r\n              value={patrimonio}\r\n              onChange={(e) => onChange(e)}\r\n              required\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 d-flex\">\r\n          <div className=\"form-group col-4\">\r\n            <label className=\"label\">Modelo:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"modelo\"\r\n              value={modelo}\r\n              onChange={(e) => onChange(e)}\r\n              required\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-group col-6\">\r\n            <label className=\"label\">localizacao:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"localizacao\"\r\n              value={localizacao}\r\n              onChange={(e) => onChange(e)}\r\n              required\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 d-flex\">\r\n          <div className=\"form-group col-4\">\r\n            <label className=\"label\">Endereço IP:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"enderecoIp\"\r\n              value={enderecoIp}\r\n              onChange={(e) => onChange(e)}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-8 d-flex justify-content-center mb-4\">\r\n          <button\r\n            type=\"submit\"\r\n            id=\"registrar\"\r\n            className=\"btn btn-lg btn-red mr-4\"\r\n          >\r\n            Inserir\r\n          </button>\r\n          <button\r\n            id=\"limpar\"\r\n            className=\"btn btn-lg btn-red ml-4\"\r\n            onClick={(e) => {\r\n              limparFormulario(e);\r\n            }}\r\n          >\r\n            Limpar\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <hr />\r\n      <div className=\"col-12\">\r\n        <h4>Impressoras Cadastradas no Sistema:</h4>\r\n        {todasImpressoras && todasImpressoras.length > 0 ? (\r\n          <table className=\"table table-striped table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Status</th>\r\n                <th scope=\"col\">Modelo</th>\r\n                <th scope=\"col\">Patrimônio</th>\r\n                <th scope=\"col\">Localização</th>\r\n                <th scope=\"col\">Endereço IP</th>\r\n                <th scope=\"col\">Editar</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {todasImpressoras.map((impressora) => {\r\n                return (\r\n                  <tr key={impressora._id}>\r\n                    <td>{i++}</td>\r\n                    <td>\r\n                      {impressora.disponivel ? \"Disponível\" : \"Indisponível\"}\r\n                    </td>\r\n                    <td>{impressora.modelo}</td>\r\n                    <td>{impressora.patrimonio}</td>\r\n                    <td>{impressora.localizacao}</td>\r\n                    <td>{impressora.enderecoIp}</td>\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-sm btn-red\"\r\n                        onClick={(e) => {\r\n                          editarImpressora(impressora);\r\n                        }}\r\n                      >\r\n                        <FontAwesomeIcon icon={faEdit} />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <span className=\"ml-3 bg-danger text-light pr-2\">\r\n            * Nenhum equipamento disponível para ser visualizado\r\n          </span>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nImpressoras.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  inserirImpressora: PropTypes.func.isRequired,\r\n  obterTodasImpressoras: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  impressoras: state.impressoras,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  setAlert,\r\n  inserirImpressora,\r\n  obterTodasImpressoras,\r\n})(Impressoras);\r\n","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\dashboard\\adm\\Usuarios.js",["181"],"import React, { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Alert from \"../../layout/Alert\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { inserirUsuario, obterTodosUsuarios } from \"../../../actions/usuarios\";\r\nimport { setAlert } from \"../../../actions/alert\";\r\n\r\nconst Usuarios = ({\r\n  setAlert,\r\n  inserirUsuario,\r\n  obterTodosUsuarios,\r\n  usuarios: {\r\n    usuarioRegistrado,\r\n    sucessoRegistroUsuario,\r\n    todosUsuarios,\r\n    sucessoTodosUsuarios,\r\n  },\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    ativo: \"true\",\r\n    nome: \"\",\r\n    matricula: \"\",\r\n    senha: \"\",\r\n    confirmarSenha: \"\",\r\n    administrador: \"false\",\r\n    atualizarUsuario: false,\r\n  });\r\n  let i = 1;\r\n\r\n  const {\r\n    ativo,\r\n    nome,\r\n    matricula,\r\n    senha,\r\n    confirmarSenha,\r\n    administrador,\r\n    atualizarUsuario,\r\n  } = formData;\r\n\r\n  useEffect(() => {\r\n    obterTodosUsuarios();\r\n  }, []);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (senha !== confirmarSenha) {\r\n      setAlert(\"Senha e confirmação de senha não correspondem!\", \"danger\");\r\n    } else {\r\n      inserirUsuario(\r\n        nome,\r\n        matricula,\r\n        senha,\r\n        ativo,\r\n        administrador,\r\n        atualizarUsuario\r\n      );\r\n      setFormData({\r\n        ...formData,\r\n        ativo: \"true\",\r\n        nome: \"\",\r\n        matricula: \"\",\r\n        senha: \"\",\r\n        confirmarSenha: \"\",\r\n        administrador: \"false\",\r\n        atualizarUsuario: false,\r\n      });\r\n      document.getElementById(\"matricula\").disabled = false;\r\n    }\r\n  };\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const editarUsuario = (usuario) => {\r\n    document.getElementById(\"matricula\").disabled = true;\r\n    document.getElementById(\"registrar\").innerText = \"Atualizar\";\r\n    setFormData({\r\n      ...formData,\r\n      nome: usuario.nome,\r\n      matricula: usuario.matricula,\r\n      administrador: usuario.administrador,\r\n      ativo: usuario.ativo,\r\n      atualizarUsuario: true,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  const limparFormulario = (e) => {\r\n    e.preventDefault();\r\n    document.getElementById(\"matricula\").disabled = false;\r\n    document.getElementById(\"registrar\").innerText = \"Inserir\";\r\n    setFormData({\r\n      ...formData,\r\n      nome: \"\",\r\n      matricula: \"\",\r\n      administrador: \"\",\r\n      ativo: \"true\",\r\n      atualizarUsuario: false,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mt-2\">\r\n        <h2>Cadastrar Usuários:</h2>\r\n        <Alert />\r\n      </div>\r\n      <form className=\"form mt-2\" onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"col-12 d-flex\">\r\n          <div className=\"form-group col-4\">\r\n            <label className=\"label\">Ativo</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"ativo\"\r\n              value={ativo}\r\n              onChange={(e) => onChange(e)}\r\n            >\r\n              <option value=\"true\">Sim</option>\r\n              <option value=\"false\">Não</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group col-4\">\r\n            <label className=\"label\">Matrícula:</label>\r\n            <input\r\n              id=\"matricula\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"matricula\"\r\n              value={matricula}\r\n              onChange={(e) => onChange(e)}\r\n              required\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 d-flex\">\r\n          <div className=\"form-group col-6\">\r\n            <label className=\"label\">Nome:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"nome\"\r\n              value={nome}\r\n              onChange={(e) => onChange(e)}\r\n              required\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-group col-2\">\r\n            <label className=\"label\">Administrador</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"administrador\"\r\n              value={administrador}\r\n              onChange={(e) => onChange(e)}\r\n            >\r\n              <option value=\"false\">Não</option>\r\n              <option value=\"true\">Sim</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 d-flex\">\r\n          <div className=\"form-group col-4\">\r\n            <label className=\"label\">Senha:</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              name=\"senha\"\r\n              value={senha}\r\n              onChange={(e) => onChange(e)}\r\n              required\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-group col-4\">\r\n            <label className=\"label\">Confirmar Senha:</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              name=\"confirmarSenha\"\r\n              value={confirmarSenha}\r\n              onChange={(e) => onChange(e)}\r\n              required\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-8 d-flex justify-content-center mb-4\">\r\n          <button\r\n            type=\"submit\"\r\n            id=\"registrar\"\r\n            className=\"btn btn-lg btn-red mr-4\"\r\n          >\r\n            Inserir\r\n          </button>\r\n          <button\r\n            id=\"limpar\"\r\n            className=\"btn btn-lg btn-red ml-4\"\r\n            onClick={(e) => {\r\n              limparFormulario(e);\r\n            }}\r\n          >\r\n            Limpar\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <hr />\r\n      <div className=\"col-12\">\r\n        <h4>Usuários Cadastrados no Sistema:</h4>\r\n        {todosUsuarios && todosUsuarios.length > 0 ? (\r\n          <table className=\"table table-striped table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Status</th>\r\n                <th scope=\"col\">Matrícula</th>\r\n                <th scope=\"col\">Nome</th>\r\n                <th scope=\"col\">Editar</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {todosUsuarios.map((usuario) => {\r\n                return (\r\n                  <tr key={usuario._id}>\r\n                    <td>{i++}</td>\r\n                    <td>{usuario.ativo ? \"Ativo\" : \"Inativo\"}</td>\r\n                    <td>{usuario.matricula}</td>\r\n                    <td>{usuario.nome}</td>\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-sm btn-red\"\r\n                        onClick={(e) => {\r\n                          editarUsuario(usuario);\r\n                        }}\r\n                      >\r\n                        <FontAwesomeIcon icon={faEdit} />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <span className=\"ml-3 bg-danger text-light pr-2\">\r\n            * Nenhum usuário disponível para ser visualizado\r\n          </span>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nUsuarios.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  inserirUsuario: PropTypes.func.isRequired,\r\n  obterTodosUsuarios: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  usuarios: state.usuarios,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  setAlert,\r\n  inserirUsuario,\r\n  obterTodosUsuarios,\r\n})(Usuarios);\r\n","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\components\\dashboard\\adm\\Suprimentos.js",["182"],"import React, { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Alert from \"../../layout/Alert\";\r\nimport Moment from \"react-moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  inserirSuprimento,\r\n  obterTodosSuprimentosBanco,\r\n} from \"../../../actions/suprimentos\";\r\nimport { setAlert } from \"../../../actions/alert\";\r\n\r\nconst Suprimentos = ({\r\n  inserirSuprimento,\r\n  obterTodosSuprimentosBanco,\r\n  suprimentos: { todosSuprimentosBanco, sucessoSuprimento },\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    codigoToner: \"\",\r\n    modelo: \"C911\",\r\n    disponivel: \"true\",\r\n    cor: \"Preto\",\r\n    atualizarSuprimento: false,\r\n  });\r\n  let i = 1;\r\n\r\n  const {\r\n    codigoToner,\r\n    modelo,\r\n    disponivel,\r\n    cor,\r\n    atualizarSuprimento,\r\n  } = formData;\r\n\r\n  useEffect(() => {\r\n    obterTodosSuprimentosBanco();\r\n  }, []);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    inserirSuprimento(\r\n      codigoToner,\r\n      modelo,\r\n      disponivel,\r\n      cor,\r\n      atualizarSuprimento\r\n    );\r\n\r\n    setFormData({\r\n      ...formData,\r\n      codigoToner: \"\",\r\n      modelo: \"C911\",\r\n      cor: \"Preto\",\r\n      disponivel: \"true\",\r\n      atualizarSuprimento: false,\r\n    });\r\n    document.getElementById(\"codigoToner\").disabled = false;\r\n  };\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const editarSuprimento = (suprimento) => {\r\n    document.getElementById(\"codigoToner\").disabled = true;\r\n    document.getElementById(\"registrar\").innerText = \"Atualizar\";\r\n    setFormData({\r\n      ...formData,\r\n      codigoToner: suprimento.codigo,\r\n      modelo: suprimento.modelo,\r\n      cor: suprimento.cor,\r\n      disponivel: suprimento.disponivel,\r\n      atualizarSuprimento: true,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  const limparFormulario = (e) => {\r\n    e.preventDefault();\r\n    document.getElementById(\"codigoToner\").disabled = false;\r\n    document.getElementById(\"registrar\").innerText = \"Inserir\";\r\n    setFormData({\r\n      ...formData,\r\n      codigoToner: \"\",\r\n      modelo: \"\",\r\n      cor: \"\",\r\n      disponivel: \"true\",\r\n      atualizarSuprimento: false,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mt-2\">\r\n        <h2>Cadastrar Suprimentos:</h2>\r\n        <Alert />\r\n        <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n          <div className=\"col-12 d-flex\">\r\n            <div className=\"form-group col-4\">\r\n              <label className=\"label\">Disponível</label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"disponivel\"\r\n                value={disponivel}\r\n                onChange={(e) => onChange(e)}\r\n              >\r\n                <option value=\"true\">Sim</option>\r\n                <option value=\"false\">Não</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group col-4\">\r\n              <label className=\"label\">Código Toner:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"codigoToner\"\r\n                name=\"codigoToner\"\r\n                value={codigoToner}\r\n                onChange={(e) => onChange(e)}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 mb-2 d-flex\">\r\n            <div className=\"col-4\">\r\n              <label className=\"label\">Modelo</label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"modelo\"\r\n                value={modelo}\r\n                onChange={(e) => onChange(e)}\r\n              >\r\n                <option value=\"C911\">C911</option>\r\n                <option value=\"outro\">Outro</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group col-7\">\r\n              <label className=\"label\">Cor:</label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"cor\"\r\n                value={cor}\r\n                onChange={(e) => onChange(e)}\r\n              >\r\n                <option value=\"Preto\">Preto</option>\r\n                <option value=\"Amarelo\">Amarelo</option>\r\n                <option value=\"Magenta\">Magenta</option>\r\n                <option value=\"Ciano\">Ciano</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-8 d-flex justify-content-center mb-4\">\r\n            <button\r\n              type=\"submit\"\r\n              id=\"registrar\"\r\n              className=\"btn btn-lg btn-red mr-4\"\r\n            >\r\n              Inserir\r\n            </button>\r\n            <button\r\n              id=\"limpar\"\r\n              className=\"btn btn-lg btn-red ml-4\"\r\n              onClick={(e) => {\r\n                limparFormulario(e);\r\n              }}\r\n            >\r\n              Limpar\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <hr />\r\n      </div>\r\n      <div className=\"mt-1 col-12\">\r\n        <h4>Suprimentos Cadastrados no Sistema:</h4>\r\n        {todosSuprimentosBanco && todosSuprimentosBanco.length > 0 ? (\r\n          <table className=\"table table-striped table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Status</th>\r\n                <th scope=\"col\">Código </th>\r\n                <th scope=\"col\">Modelo </th>\r\n                <th scope=\"col\">Cor </th>\r\n                <th scope=\"col\">Utilizado</th>\r\n                <th scope=\"col\">Data de Inserção</th>\r\n                <th scope=\"col\">Editar</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {todosSuprimentosBanco.map((sup) => {\r\n                return (\r\n                  <tr key={sup._id}>\r\n                    <td>{i++}</td>\r\n                    <td>{sup.disponivel ? \"Disponível\" : \"Indisponível\"}</td>\r\n                    <td>{sup.codigo}</td>\r\n                    <td>{sup.modelo}</td>\r\n                    <td>{sup.cor}</td>\r\n                    <td>{sup.utilizado ? \"Sim\" : \"Não\"}</td>\r\n                    <td>\r\n                      <Moment format=\"DD/MM/YYYY\">{sup.data}</Moment>\r\n                    </td>\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-sm btn-red\"\r\n                        onClick={(e) => {\r\n                          editarSuprimento(sup);\r\n                        }}\r\n                      >\r\n                        <FontAwesomeIcon icon={faEdit} />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <span className=\"ml-3 bg-danger text-light pr-2\">\r\n            * Sem suprimentos disponíveis para utilização\r\n          </span>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nSuprimentos.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  inserirSuprimento: PropTypes.func.isRequired,\r\n  obterTodosSuprimentosBanco: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  suprimentos: state.suprimentos,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  setAlert,\r\n  inserirSuprimento,\r\n  obterTodosSuprimentosBanco,\r\n})(Suprimentos);\r\n","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\actions\\relatorio.js",[],"C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\reducers\\auth.js",["183","184","185"],"import {\r\n  SUCESSO_REGISTRO_USUARIO,\r\n  FALHA_REGISTRO_USUARIO,\r\n  USUARIO_LOGADO,\r\n  ERRO_AUTENTICACAO,\r\n  SUCESSO_LOGIN,\r\n  FALHA_LOGIN,\r\n  LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst estadosIniciais = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  usuario: null,\r\n};\r\n\r\nexport default function (state = estadosIniciais, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USUARIO_LOGADO:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        usuario: payload,\r\n      };\r\n    case SUCESSO_LOGIN:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n      };\r\n    case FALHA_LOGIN:\r\n    case ERRO_AUTENTICACAO:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\reducers\\suprimentos.js",["186"],"import {\r\n  SUCESSO_INSERIR_SUPRIMENTO,\r\n  FALHA_INSERIR_SUPRIMENTO,\r\n  OBTER_TODOS_SUPRIMENTOS,\r\n  OBTER_TODOS_SUPRIMENTOS_BANCO,\r\n  FALHA_OBTER_SUPRIMENTO,\r\n  FALHA_OBTER_TODOS_SUPRIMENTOS,\r\n  OBTER_SUPRIMENTO,\r\n} from \"../actions/types\";\r\n\r\nconst estadosInicias = {\r\n  suprimento: null,\r\n  sucessoSuprimento: false,\r\n  todosSuprimentos: null,\r\n  todosSuprimentosBanco: null,\r\n};\r\n\r\nexport default function (state = estadosInicias, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SUCESSO_INSERIR_SUPRIMENTO:\r\n      return {\r\n        ...state,\r\n        sucessoSuprimento: true,\r\n      };\r\n    case FALHA_INSERIR_SUPRIMENTO:\r\n      return {\r\n        ...state,\r\n        sucessoSuprimento: false,\r\n      };\r\n    case OBTER_TODOS_SUPRIMENTOS:\r\n      return {\r\n        ...state,\r\n        todosSuprimentos: payload,\r\n        sucessoSuprimento: true,\r\n      };\r\n    case OBTER_TODOS_SUPRIMENTOS_BANCO:\r\n      return {\r\n        ...state,\r\n        todosSuprimentosBanco: payload,\r\n        sucessoSuprimento: true,\r\n      };\r\n    case OBTER_SUPRIMENTO:\r\n      return {\r\n        ...state,\r\n        suprimento: payload,\r\n        sucessoSuprimento: true,\r\n      };\r\n    case FALHA_OBTER_SUPRIMENTO:\r\n    case FALHA_OBTER_TODOS_SUPRIMENTOS:\r\n      return {\r\n        ...state,\r\n        todosSuprimentos: null,\r\n        suprimento: null,\r\n        sucessoSuprimento: null,\r\n        todosSuprimentosBanco: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\reducers\\alert.js",["187"],"import { ADD_ALERTA, REMOVER_ALERTA } from \"../actions/types\"; //states that we're going to use to make the actions happen\r\nconst initialState = []; //the states of alert reducer\r\n\r\nexport default function (state = initialState, action) {\r\n  /**\r\n   * Here we're destructuring type and payload from action that is sent by dispatch\r\n   * payload has three parameters, msg, alertType and id that was generated\r\n   * by uuid\r\n   */\r\n  const { type, payload } = action;\r\n  /**\r\n   * if type is equal to SET_ALERT we're going to pass the payload values\r\n   * to initialState. REMOVE_ALERT will be responsible to make a filter\r\n   * in our alert and make visible only the alerts id that are different of\r\n   * the actual alert id sent via payload\r\n   **/\r\n  switch (type) {\r\n    case ADD_ALERTA:\r\n      return [...state, payload];\r\n    case REMOVER_ALERTA:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\reducers\\usuarios.js",["188"],"import {\r\n  SUCESSO_REGISTRO_USUARIO,\r\n  FALHA_REGISTRO_USUARIO,\r\n  SUCESSO_OBTER_TODOS_USUARIOS,\r\n  FALHA_OBTER_TODOS_USUARIOS,\r\n} from \"../actions/types\";\r\nconst estadosIniciais = {\r\n  usuarioRegistrado: null,\r\n  sucessoRegistroUsuario: null,\r\n  todosUsuarios: null,\r\n  sucessoTodosUsuarios: null,\r\n};\r\n\r\nexport default function (state = estadosIniciais, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SUCESSO_REGISTRO_USUARIO:\r\n      return {\r\n        ...state,\r\n        usuarioRegistrado: payload,\r\n        sucessoRegistroUsuario: true,\r\n      };\r\n    case FALHA_REGISTRO_USUARIO:\r\n      return {\r\n        ...state,\r\n        usuarioRegistrado: null,\r\n        sucessoRegistroUsuario: false,\r\n      };\r\n    case SUCESSO_OBTER_TODOS_USUARIOS:\r\n      return {\r\n        ...state,\r\n        todosUsuarios: payload,\r\n        sucessoTodosUsuarios: true,\r\n      };\r\n    case FALHA_OBTER_TODOS_USUARIOS:\r\n      return {\r\n        ...state,\r\n        todosUsuarios: null,\r\n        sucessoTodosUsuarios: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\reducers\\impressoras.js",["189"],"import {\r\n  SUCESSO_OBTER_IMPRESSORA,\r\n  FALHA_OBTER_IMPRESSORA,\r\n  SUCESSO_OBTER_TODAS_IMPRESSORAS,\r\n  FALHA_OBTER_TODAS_IMPRESSORAS,\r\n} from \"../actions/types\";\r\n\r\nconst estadosIniciais = {\r\n  impressora: null,\r\n  sucessoImpressora: null,\r\n  todasImpressoras: null,\r\n  sucessoTodasImpressoras: null,\r\n};\r\n\r\nexport default function (state = estadosIniciais, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SUCESSO_OBTER_IMPRESSORA:\r\n      return {\r\n        ...state,\r\n        impressora: payload,\r\n        sucessoImpressora: true,\r\n      };\r\n    case FALHA_OBTER_IMPRESSORA:\r\n      return {\r\n        ...state,\r\n        impressora: null,\r\n        sucessoImpressora: false,\r\n      };\r\n    case SUCESSO_OBTER_TODAS_IMPRESSORAS:\r\n      return {\r\n        ...state,\r\n        todasImpressoras: payload,\r\n        sucessoTodasImpressoras: true,\r\n      };\r\n    case FALHA_OBTER_TODAS_IMPRESSORAS:\r\n      return {\r\n        ...state,\r\n        todasImpressoras: null,\r\n        sucessoTodasImpressoras: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\reducers\\relatorio.js",["190"],"import{ SUCESSO_OBTER_TROCAS, FALHA_OBTER_TROCAS} from '../actions/types'\r\nconst estadosIniciais = {\r\n    relatorio: null,\r\n    sucessoObterRelatorio: null\r\n}\r\n\r\nexport default function(state = estadosIniciais, action){\r\n    const {type, payload} = action;\r\n    switch(type){\r\n        case SUCESSO_OBTER_TROCAS:\r\n            return{\r\n                ...state,\r\n                relatorio: payload,\r\n                sucessoObterRelatorio: true\r\n            }\r\n        case FALHA_OBTER_TROCAS:\r\n            return{\r\n                ...state,\r\n                relatorio: null,\r\n                sucessoObterRelatorio: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\reducers\\registrartroca.js",["191"],"import {\r\n  SUCESSO_REGISTRAR_TROCA,\r\n  FALHA_REGISTRAR_TROCA,\r\n} from \"../actions/types\";\r\n\r\nconst estadosIniciais = {\r\n  registro: null,\r\n  sucessoRegistrarTroca: null,\r\n};\r\n\r\nexport default function (state = estadosIniciais, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SUCESSO_REGISTRAR_TROCA:\r\n      return {\r\n        ...state,\r\n        registro: payload,\r\n        sucessoRegistrarTroca: true,\r\n      };\r\n    case FALHA_REGISTRAR_TROCA:\r\n      return {\r\n        ...state,\r\n        registro: null,\r\n        sucessoRegistrarTroca: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\06336\\Desktop\\Projetos\\warehouse\\client\\src\\actions\\usuarios.js",["192"],"import axios from \"axios\";\r\nimport {\r\n  SUCESSO_REGISTRO_USUARIO,\r\n  FALHA_REGISTRO_USUARIO,\r\n  SUCESSO_OBTER_TODOS_USUARIOS,\r\n  FALHA_OBTER_TODOS_USUARIOS,\r\n  SUCESSO_ATUALIZAR_USUARIO,\r\n} from \"./types\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nexport const inserirUsuario = (\r\n  nome,\r\n  matricula,\r\n  senha,\r\n  ativo,\r\n  administrador,\r\n  atualizarUsuario\r\n) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ nome, matricula, senha, ativo, administrador });\r\n\r\n  try {\r\n    if (atualizarUsuario == true) {\r\n      const res = await axios.put(\"api/usuario\", body, config);\r\n      dispatch({\r\n        type: SUCESSO_ATUALIZAR_USUARIO,\r\n        payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Usuário atualizado com sucesso!\", \"success\"));\r\n    } else {\r\n      const res = await axios.post(\"api/usuario\", body, config);\r\n      dispatch({\r\n        type: SUCESSO_REGISTRO_USUARIO,\r\n        payload: res.data,\r\n      });\r\n      dispatch(setAlert(\"Usuário registrado com sucesso!\", \"success\"));\r\n    }\r\n    const resTodosUsuarios = await axios.get(\"api/usuario/todosusuarios\");\r\n    dispatch({\r\n      type: SUCESSO_OBTER_TODOS_USUARIOS,\r\n      payload: resTodosUsuarios.data,\r\n    });\r\n  } catch (err) {\r\n    const erros = err.response.data.errors;\r\n    if (erros) {\r\n      erros.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    } else {\r\n      //dispatch(setAlert(err.response.data, \"danger\"));\r\n    }\r\n\r\n    dispatch({\r\n      type: FALHA_REGISTRO_USUARIO,\r\n    });\r\n  }\r\n};\r\n\r\nexport const obterTodosUsuarios = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"api/usuario/todosusuarios\");\r\n    dispatch({\r\n      type: SUCESSO_OBTER_TODOS_USUARIOS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    const erros = err.response.data.errors;\r\n    if (erros) {\r\n      erros.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: FALHA_OBTER_TODOS_USUARIOS,\r\n    });\r\n  }\r\n};\r\n",{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":29,"column":6,"nodeType":"199","endLine":29,"endColumn":8,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":46,"column":44,"nodeType":"203","messageId":"204","endLine":46,"endColumn":46},{"ruleId":"201","severity":1,"message":"202","line":58,"column":44,"nodeType":"203","messageId":"204","endLine":58,"endColumn":46},{"ruleId":"201","severity":1,"message":"202","line":71,"column":44,"nodeType":"203","messageId":"204","endLine":71,"endColumn":46},{"ruleId":"201","severity":1,"message":"202","line":85,"column":48,"nodeType":"203","messageId":"204","endLine":85,"endColumn":50},{"ruleId":"197","severity":1,"message":"205","line":83,"column":6,"nodeType":"199","endLine":83,"endColumn":18,"suggestions":"206"},{"ruleId":"197","severity":1,"message":"207","line":87,"column":6,"nodeType":"199","endLine":87,"endColumn":8,"suggestions":"208"},{"ruleId":"209","severity":1,"message":"210","line":91,"column":34,"nodeType":"211","messageId":"212","endLine":91,"endColumn":36},{"ruleId":"197","severity":1,"message":"213","line":110,"column":6,"nodeType":"199","endLine":110,"endColumn":18,"suggestions":"214"},{"ruleId":"197","severity":1,"message":"215","line":60,"column":6,"nodeType":"199","endLine":60,"endColumn":8,"suggestions":"216"},{"ruleId":"217","severity":1,"message":"218","line":3,"column":3,"nodeType":"219","messageId":"220","endLine":3,"endColumn":27},{"ruleId":"217","severity":1,"message":"221","line":4,"column":3,"nodeType":"219","messageId":"220","endLine":4,"endColumn":25},{"ruleId":"201","severity":1,"message":"202","line":16,"column":40,"nodeType":"203","messageId":"204","endLine":16,"endColumn":42},{"ruleId":"201","severity":1,"message":"202","line":24,"column":40,"nodeType":"203","messageId":"204","endLine":24,"endColumn":42},{"ruleId":"201","severity":1,"message":"202","line":33,"column":40,"nodeType":"203","messageId":"204","endLine":33,"endColumn":42},{"ruleId":"201","severity":1,"message":"202","line":43,"column":40,"nodeType":"203","messageId":"204","endLine":43,"endColumn":42},{"ruleId":"201","severity":1,"message":"202","line":54,"column":40,"nodeType":"203","messageId":"204","endLine":54,"endColumn":42},{"ruleId":"201","severity":1,"message":"202","line":64,"column":40,"nodeType":"203","messageId":"204","endLine":64,"endColumn":42},{"ruleId":"201","severity":1,"message":"202","line":60,"column":35,"nodeType":"203","messageId":"204","endLine":60,"endColumn":37},{"ruleId":"201","severity":1,"message":"202","line":171,"column":64,"nodeType":"203","messageId":"204","endLine":171,"endColumn":66},{"ruleId":"201","severity":1,"message":"202","line":182,"column":64,"nodeType":"203","messageId":"204","endLine":182,"endColumn":66},{"ruleId":"201","severity":1,"message":"202","line":193,"column":64,"nodeType":"203","messageId":"204","endLine":193,"endColumn":66},{"ruleId":"201","severity":1,"message":"202","line":204,"column":64,"nodeType":"203","messageId":"204","endLine":204,"endColumn":66},{"ruleId":"201","severity":1,"message":"202","line":239,"column":73,"nodeType":"203","messageId":"204","endLine":239,"endColumn":75},{"ruleId":"201","severity":1,"message":"202","line":32,"column":29,"nodeType":"203","messageId":"204","endLine":32,"endColumn":31},{"ruleId":"217","severity":1,"message":"222","line":46,"column":13,"nodeType":"219","messageId":"220","endLine":46,"endColumn":16},{"ruleId":"217","severity":1,"message":"223","line":5,"column":3,"nodeType":"219","messageId":"220","endLine":5,"endColumn":17},{"ruleId":"201","severity":1,"message":"202","line":85,"column":29,"nodeType":"203","messageId":"204","endLine":85,"endColumn":31},{"ruleId":"217","severity":1,"message":"224","line":2,"column":8,"nodeType":"219","messageId":"220","endLine":2,"endColumn":14},{"ruleId":"197","severity":1,"message":"225","line":47,"column":6,"nodeType":"199","endLine":47,"endColumn":8,"suggestions":"226"},{"ruleId":"197","severity":1,"message":"227","line":45,"column":6,"nodeType":"199","endLine":45,"endColumn":8,"suggestions":"228"},{"ruleId":"197","severity":1,"message":"229","line":39,"column":6,"nodeType":"199","endLine":39,"endColumn":8,"suggestions":"230"},{"ruleId":"217","severity":1,"message":"218","line":2,"column":3,"nodeType":"219","messageId":"220","endLine":2,"endColumn":27},{"ruleId":"217","severity":1,"message":"221","line":3,"column":3,"nodeType":"219","messageId":"220","endLine":3,"endColumn":25},{"ruleId":"231","severity":1,"message":"232","line":18,"column":1,"nodeType":"233","endLine":50,"endColumn":2},{"ruleId":"231","severity":1,"message":"232","line":18,"column":1,"nodeType":"233","endLine":61,"endColumn":2},{"ruleId":"231","severity":1,"message":"232","line":4,"column":1,"nodeType":"233","endLine":25,"endColumn":2},{"ruleId":"231","severity":1,"message":"232","line":14,"column":1,"nodeType":"233","endLine":45,"endColumn":2},{"ruleId":"231","severity":1,"message":"232","line":15,"column":1,"nodeType":"233","endLine":45,"endColumn":2},{"ruleId":"231","severity":1,"message":"232","line":7,"column":1,"nodeType":"233","endLine":25,"endColumn":2},{"ruleId":"231","severity":1,"message":"232","line":11,"column":1,"nodeType":"233","endLine":29,"endColumn":2},{"ruleId":"201","severity":1,"message":"202","line":28,"column":26,"nodeType":"203","messageId":"204","endLine":28,"endColumn":28},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'carregarUsuario'. Either include it or remove the dependency array. If 'carregarUsuario' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["236"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["237"],"React Hook useEffect has a missing dependency: 'obterImpressorasDisponiveis'. Either include it or remove the dependency array. If 'obterImpressorasDisponiveis' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["238"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'formData' and 'todasImpressoras'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["239"],"React Hook useEffect has a missing dependency: 'obterTodosSuprimentos'. Either include it or remove the dependency array. If 'obterTodosSuprimentos' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["240"],"no-unused-vars","'SUCESSO_REGISTRO_USUARIO' is defined but never used.","Identifier","unusedVar","'FALHA_REGISTRO_USUARIO' is defined but never used.","'res' is assigned a value but never used.","'USUARIO_LOGADO' is defined but never used.","'Moment' is defined but never used.","React Hook useEffect has a missing dependency: 'obterTodasImpressoras'. Either include it or remove the dependency array. If 'obterTodasImpressoras' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["241"],"React Hook useEffect has a missing dependency: 'obterTodosUsuarios'. Either include it or remove the dependency array. If 'obterTodosUsuarios' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["242"],"React Hook useEffect has a missing dependency: 'obterTodosSuprimentosBanco'. Either include it or remove the dependency array. If 'obterTodosSuprimentosBanco' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["243"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},"Update the dependencies array to be: [carregarUsuario]",{"range":"260","text":"261"},"Update the dependencies array to be: [formData, suprimento]",{"range":"262","text":"263"},"Update the dependencies array to be: [obterImpressorasDisponiveis]",{"range":"264","text":"265"},"Update the dependencies array to be: [formData, patrimonio, todasImpressoras]",{"range":"266","text":"267"},"Update the dependencies array to be: [obterTodosSuprimentos]",{"range":"268","text":"269"},"Update the dependencies array to be: [obterTodasImpressoras]",{"range":"270","text":"271"},"Update the dependencies array to be: [obterTodosUsuarios]",{"range":"272","text":"273"},"Update the dependencies array to be: [obterTodosSuprimentosBanco]",{"range":"274","text":"275"},[1055,1057],"[carregarUsuario]",[2107,2119],"[formData, suprimento]",[2187,2189],"[obterImpressorasDisponiveis]",[2814,2826],"[formData, patrimonio, todasImpressoras]",[1482,1484],"[obterTodosSuprimentos]",[1136,1138],"[obterTodasImpressoras]",[1097,1099],"[obterTodosUsuarios]",[1039,1041],"[obterTodosSuprimentosBanco]"]